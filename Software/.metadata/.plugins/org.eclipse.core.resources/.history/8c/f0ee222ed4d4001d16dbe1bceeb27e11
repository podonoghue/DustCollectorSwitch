/**
 ============================================================================
 * @file    main.cpp (180.ARM_Peripherals/Sources/main.cpp)
 * @brief   Dust extractor control
 *
 *  Created on: 10/1/2016
 *      Author: podonoghue
 ============================================================================
 */
#include "hardware.h"
#include "mcg.h"

using namespace USBDM;

int main() {
   console.writeln("\nStarting");
   console.writeln("Clock mode      = ", Mcg::getClockModeName());
   console.writeln("SystemCoreClock = ", SystemCoreClock, " Hz");
   console.writeln("SystemBusClock  = ", SystemBusClock, " Hz");

   Relay::setOutput(PinDriveStrength_High, PinDriveMode_PushPull, PinSlewRate_Slow);
   HoldLed::setOutput(PinDriveStrength_High, PinDriveMode_PushPull, PinSlewRate_Slow);
   DelayLed::setOutput(PinDriveStrength_High, PinDriveMode_PushPull, PinSlewRate_Slow);

   static constexpr Adc0BasicInfo::Init adcInit {
      AdcClockSource_Bus ,       // ADC Clock Source - Bus clock
      AdcClockDivider_4 ,        // Clock Divide Select - Divide by 4
      AdcResolution_10bit_se ,   // ADC Resolution - 10-bit unsigned (single-ended mode)
   };

   Adc0::configure(adcInit);

   for(int count = 0;;count++) {

   }
   return 0;
}
